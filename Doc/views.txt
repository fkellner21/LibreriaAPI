***********************************
Archivo: _ViewImports.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\_ViewImports.cshtml
***********************************
@using WebApp
@using WebApp.Models
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

***********************************
Archivo: _ViewStart.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\_ViewStart.cshtml
***********************************
@{
    Layout = "_Layout";
}

***********************************
Archivo: Create.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\Articulo\Create.cshtml
***********************************
@model LogicaDeNegocio.Entidades.Articulo

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>
@if (@ViewBag.Mensaje != null)
{
    <div class="alert alert-danger" role="alert">
        <p>@ViewBag.Mensaje</p>
    </div>
}
<h4>Articulo</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Nombre" class="control-label"></label>
                <input asp-for="Nombre" class="form-control" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Descripcion" class="control-label"></label>
                <input asp-for="Descripcion" class="form-control" />
                <span asp-validation-for="Descripcion" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Codigo" class="control-label"></label>
                <input asp-for="Codigo" class="form-control" />
                <span asp-validation-for="Codigo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PrecioDeVenta" class="control-label">Precio de venta</label>
                <input asp-for="PrecioDeVenta" class="form-control" />
                <span asp-validation-for="PrecioDeVenta" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Stock" class="control-label"></label>
                <input asp-for="Stock" class="form-control" />
                <span asp-validation-for="Stock" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

***********************************
Archivo: Edit.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\Articulo\Edit.cshtml
***********************************
@model LogicaDeNegocio.Entidades.Articulo

@{
    ViewData["Title"] = "Editar Articulo";
}

<h1>Editar</h1>

<h4>Articulo</h4>
@if (@ViewBag.Mensaje != null)
{
    <div class="alert alert-danger" role="alert">
        <p>@ViewBag.Mensaje</p>
    </div>
}
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Nombre" class="control-label"></label>
                <input asp-for="Nombre" class="form-control" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Descripcion" class="control-label"></label>
                <input asp-for="Descripcion" class="form-control" />
                <span asp-validation-for="Descripcion" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Codigo" class="control-label"></label>
                <input asp-for="Codigo" class="form-control" />
                <span asp-validation-for="Codigo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PrecioDeVenta" class="control-label">Precio de venta</label>
                <input asp-for="PrecioDeVenta" class="form-control" />
                <span asp-validation-for="PrecioDeVenta" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Stock" class="control-label"></label>
                <input asp-for="Stock" class="form-control" />
                <span asp-validation-for="Stock" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Volver a la lista</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

***********************************
Archivo: Index.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\Articulo\Index.cshtml
***********************************
@model IEnumerable<LogicaDeNegocio.Entidades.Articulo>

@{
    ViewData["Title"] = "Articulos";
}

<h1>Articulos</h1>
@if (@ViewBag.Mensaje != null)
{
    <div class="alert alert-success" role="alert">
        <p>@ViewBag.Mensaje</p>
    </div>
}
@if (@Model != null && Model.Count()==0)
{
    <div class="alert alert-danger" role="alert">
        <p>Aun no existen articulos cargados en el sistema</p>
    </div>
}
@if (Model != null)
{
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Nombre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Descripcion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Codigo)
            </th>
            <th>
                Precio de venta
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Descripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Codigo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PrecioDeVenta)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Borrar</a>
            </td>
        </tr>
}
    </tbody>
</table>
}
<p>
    <a asp-action="Create">Nuevo articulo</a>
</p>

***********************************
Archivo: Index.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\Cliente\Index.cshtml
***********************************
@model IEnumerable<LogicaDeNegocio.Dtos.ClienteDto>

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center text-decoration-underline">Lista de clientes</h1>

@if (@ViewBag.mensaje != null)
{
    <div class="alert alert-danger" role="alert">
        <p>@ViewBag.Mensaje</p>
    </div>
}
<div class="container-fluid mt-3">
<div class="row justify-content-around">
    <div class="col-md-6">
        <h4>Filtrar Clientes por Razon Social</h4>
        <form action="/Cliente/FiltroXRazonSocial">
            <div class="form-group">
                <label for="filtro" class="control-label"></label>
                <input for="filtro" name="filtro" value=@ViewBag.filtroRazonSocial class="form-control" />
            </div>
            <div class="form-group">
                <input type="submit" value="Filtrar" class="btn btn-primary mt-1" />
            </div>
        </form>
    </div>
        <div class="col-md-6">
        <h4>Filtrar Clientes con pedidos mayores a: </h4>
        <form action="/Cliente/FiltroXMonto">
            <div class="form-group">
                <label for="filtro" class="control-label"></label>
                <input for="filtro" name="filtro" type="number" value=@ViewBag.filtroXMonto class="form-control" />
            </div>
            <div class="form-group">
                <input type="submit" value="Filtrar" class="btn btn-primary mt-1" />
            </div>
        </form>
        </div>
</div>
</div>
@if (@Model != null && Model.Count()==0)
{
    <div class="alert alert-danger" role="alert">
        <p>No existen clientes que cumplan con lo solicitado</p>
    </div>
}
@if (Model != null)
{
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RazonSocial)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rut)
            </th>
            <th>
                Calle
            </th>
            <th>
                Numero
            </th>
            <th>
                Ciudad
            </th>
            <th>
                Distancia
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RazonSocial)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rut)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DireccionCalle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DireccionNumero)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DireccionCiudad)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DireccionDistancia)
            </td
        </tr>
        }
    </tbody>
</table>
}
***********************************
Archivo: Index.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\Index\Index.cshtml
***********************************


<h1>Bienvenido</h1>
<form asp-action="Logout">
            <div class="form-group">
                <input type="submit" value="Salir" class="btn btn-primary mt-4" />
            </div>
        </form>
***********************************
Archivo: Login.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\Index\Login.cshtml
***********************************
@model LogicaDeNegocio.Entidades.Administrador

@{
    ViewData["Title"] = "Login";
}

<h1>Login</h1>

@if (@ViewBag.mensaje != null)
{
    <div class="alert alert-danger" role="alert">
        <p>@ViewBag.Mensaje</p>
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<!-- Section: Design Block -->
<section class=" text-center text-lg-start">
  <style>
    .rounded-t-5 {
      border-top-left-radius: 0.5rem;
      border-top-right-radius: 0.5rem;
    }

    media (min-width: 992px) {
      .rounded-tr-lg-0 {
        border-top-right-radius: 0;
      }

      .rounded-bl-lg-5 {
        border-bottom-left-radius: 0.5rem;
      }
    }
  </style>
  <div class="card mb-3">
    <div class="row g-0 d-flex align-items-center">
      <div class="col-lg-4 d-none d-lg-flex">
        <img src="https://mdbootstrap.com/img/new/ecommerce/vertical/004.jpg" alt="Trendy Pants and Shoes"
          class="w-100 rounded-t-5 rounded-tr-lg-0 rounded-bl-lg-5" />
      </div>
      <div class="col-lg-8">
        <div class="card-body py-5 px-md-5">

          <form asp-action="Login" method="post">
            <!-- Email input -->
            <div data-mdb-input-init class="form-outline mb-4">
              <input asp-for="Email" type="email" id="form2Example1" class="form-control" />
              <label asp-for="Email" class="form-label" >Email</label>
            </div>

            <!-- Password input -->
            <div data-mdb-input-init class="form-outline mb-4">
              <input asp-for="Password" type="password" id="form2Example2" class="form-control" />
              <label asp-for="Password" class="form-label" >Password</label>
            </div>

            <!-- 2 column grid layout for inline styling -->
            <div class="row mb-4">
              <div class="col d-flex justify-content-left">
                <!-- Checkbox -->
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" value="" id="form2Example31" checked />
                  <label class="form-check-label" for="form2Example31"> Recordarme </label>
                </div>
              </div>
            </div>

            <!-- Submit button -->
            <button  type="submit" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-block mb-4">Ingresar</button>

          </form>

        </div>
      </div>
    </div>
  </div>
</section>
<!-- Section: Design Block -->
***********************************
Archivo: Create.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\Pedido\Create.cshtml
***********************************
@model LogicaDeNegocio.Dtos.PedidoDto

@{
    ViewData["Title"] = "Consolidar pedido";
}

<h1>Consolidar</h1>

<h4>Pedido</h4>
@if (@ViewBag.mensaje != null)
{
    <div class="@ViewBag.color" role="alert">
        <p>@ViewBag.mensaje</p>
    </div>
}
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="idCliente" class="control-label">Cliente</label>
                <select asp-for="idCliente" class="form-control">
                @foreach (var item in ViewBag.clientes)
                {
                    <option value="@item.Id">@item.RazonSocial</option>
                }
                </select>
                <span asp-validation-for="idCliente" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="fechaDeEntrega" class="control-label"></label>
                <input asp-for="fechaDeEntrega" type="date" class="form-control" />
                <span asp-validation-for="fechaDeEntrega" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="esExpress" /> @Html.DisplayNameFor(model => model.esExpress)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Crear" class="btn btn-primary" />
            </div>

        </form>
    </div>
</div>

<div>
    <a asp-action="ElegirArticulos">Volver</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

***********************************
Archivo: ElegirArticulos.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\Pedido\ElegirArticulos.cshtml
***********************************
@using LogicaDeNegocio.Entidades
@model IEnumerable<Articulo>


@{
    ViewData["Title"] = "Articulos";
}

<h1>Articulos</h1>

@if (@ViewBag.Mensaje != null)
{
    <div class="@ViewBag.Color" role="alert">
        <p>@ViewBag.Mensaje</p>
    </div>
}
@if (@Model != null && Model.Count()==0)
{
    <div class="alert alert-danger" role="alert">
        <p>Aun no existen articulos que puedan ser comprados</p>
    </div>
}
@if (Model != null)
{
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Nombre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Descripcion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Codigo)
            </th>
            <th>
                Precio base
            </th>
            <th>
                Stock actual
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Descripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Codigo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PrecioDeVenta)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
            <td>
                <form action="Agregar">
                <div class="form-group" >
                    <label for="cantidad" class="control-label">Cantidad: </label>
                    <input type="number" name="cantidad" class="col-2" />
                    <input type="number" name="id" value=@item.Id hidden />
                    <input type="submit" value="Agregar" class="btn btn-primary col-3"/>
                </div>
                </form>
            </td>
        </tr>
}
    </tbody>
</table>
}
<h3>Lista de articulos a comprar</h3>
<table class="table">
    <thead>
        <tr>
            <th>
                Nombre
            </th>
            <th>
                Codigo
            </th>
            <th>
                Cantidad
            </th>
            <th>
                Total base
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in ViewBag.Lista)
        {
            <tr>
                <td>
                    @item.Articulo.Nombre
                </td>
                <td>
                    @item.Articulo.Codigo
                </td>
                <td>
                    @item.Cantidad
                </td>
                <td>
                    @item.Precio
                </td>
                <td>
                    <a asp-action="DeleteLinea" asp-route-idArt="@item.Articulo.Id" asp-route-cantidad="@item.Cantidad" class="btn btn-danger">Borrar</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<p>
    <a asp-action="Create" class="btn btn-success">Consolidar pedido</a>
    <a asp-action="Cancel" class="btn btn-danger">Cancelar pedido</a>

</p>
***********************************
Archivo: Index.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\Pedido\Index.cshtml
***********************************
@model IEnumerable<LogicaDeNegocio.Dtos.PedidoDto>

@{
    ViewData["Title"] = "Pedidos";
}

<h1 class="text-center text-decoration-underline">Lista de pedidos</h1>
@if (@ViewBag.mensaje != null)
{
    <div class="@ViewBag.color" role="alert">
        <p>@ViewBag.mensaje</p>
    </div>
}

@if (@Model != null && Model.Count()==0)
{
    <div class="alert alert-danger" role="alert">
        <p>Aun no existen pedidos en el sistema</p>
    </div>
}
@if (Model != null)
{
<table class="table">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Es express?
            </th>
            <th>
                Fecha de realizado
            </th>
            <th>
                Fecha de entrega
            </th>
            <th>
                Costo total
            </th>
            <th>
                Nombre del cliente
            </th>
            <th>
                Anulado?
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.esExpress)
            </td>
            <td>
                    @item.fechaPedidoCorta()
            </td>
            <td>
                    @item.fechaDeEntregaCorta()
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.precio)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.nombreCliente)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.anulado)
            </td>
        </tr>
        }
    </tbody>
</table>
}
<p>
    <a asp-action="ElegirArticulos" class="btn btn-success">Crear/Continuar pedido </a>
    <a asp-action="PedidosAanular" class="btn btn-danger">Buscar un pedido para anular </a>

</p>
***********************************
Archivo: PedidosAanular.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\Pedido\PedidosAanular.cshtml
***********************************
@model IEnumerable<LogicaDeNegocio.Dtos.PedidoDto>

@{
    ViewData["Title"] = "Pedidos anulables";
}
<div class="row">
    <div class="col-md-4">
        <form asp-action="PedidosAanular">
            <div class="form-group">
                <label for="fechaPedido" class="control-label">Fecha de realizado:</label>
                <input for="fechaPedido" name="fechaPedido" type="date" class="form-control" />
            </div>
            <div class="form-group">
                <input type="submit" value="Ver" class="btn btn-primary" />
            </div>

        </form>
    </div>
</div>

<h1 class="text-center text-decoration-underline">Lista de pedidos anulables</h1>
@if (@ViewBag.mensaje != null)
{
    <div class="@ViewBag.color" role="alert">
        <p>@ViewBag.mensaje</p>
    </div>
}
@if (@Model != null && Model.Count()==0)
{
    <div class="alert alert-danger" role="alert">
        <p>No existen pedidos pendientes de entrega generados en esa fecha</p>
    </div>
}
@if (Model != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    Id
                </th>
                <th>
                    Fecha de realizado
                </th>
                <th>
                    Fecha de entrega
                </th>
                <th>
                    Costo total
                </th>
                <th>
                    Nombre del cliente
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.id)
                    </td>
                    <td>
                        @item.fechaPedidoCorta()
                    </td>
                    <td>
                        @item.fechaDeEntregaCorta()
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.precio)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.nombreCliente)
                    </td>

                    <td>
                        <a asp-action="Anular" asp-route-id="@item.id" class="btn btn-danger">Anular</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


***********************************
Archivo: Error.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\Shared\Error.cshtml
***********************************
@model ErrorViewModel
@{
    ViewData["Title"] = "Error";
}

<h1 class="text-danger">Error.</h1>
<h2 class="text-danger">An error occurred while processing your request.</h2>

@if (Model.ShowRequestId)
{
    <p>
        <strong>Request ID:</strong> <code>@Model.RequestId</code>
    </p>
}

<h3>Development Mode</h3>
<p>
    Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
</p>
<p>
    <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
    It can result in displaying sensitive information from exceptions to end users.
    For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
    and restarting the app.
</p>

***********************************
Archivo: _Layout.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\Shared\_Layout.cshtml
***********************************
@{
    string rol = Context.Session.GetString("rol");
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - WebApp</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/WebApp.styles.css" asp-append-version="true" />
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="container-fluid">
            <a class="navbar-brand" asp-area="" asp-controller="Index" asp-action="Index">Libreria</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">
                    @if(rol == "Admin")
                    {
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Usuario" asp-action="AdminIndex">Administradores</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Cliente" asp-action="Index">Clientes</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Articulo" asp-action="Index">Articulos</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Pedido" asp-action="Index">Pedidos</a>
                        </li>
                    }

                </ul>
            </div>
        </div>
    </nav>
</head>
<body>
    
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

***********************************
Archivo: _ValidationScriptsPartial.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\Shared\_ValidationScriptsPartial.cshtml
***********************************
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

***********************************
Archivo: AdminCreate.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\Usuario\AdminCreate.cshtml
***********************************
@model LogicaDeNegocio.Entidades.Administrador

@{
    ViewData["Title"] = "AdminCreate";
}

<h1>AdminCreate</h1>
@if (@ViewBag.Mensaje != null)
{
    <div class="alert alert-danger" role="alert">
        <p>@ViewBag.Mensaje</p>
    </div>
}
<h4>Administrador</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AdminCreate">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="ModificaUsuario" /> @Html.DisplayNameFor(model => model.ModificaUsuario)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Nombre" class="control-label"></label>
                <input asp-for="Nombre" class="form-control" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Apellido" class="control-label"></label>
                <input asp-for="Apellido" class="form-control" />
                <span asp-validation-for="Apellido" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="AdminIndex">Volver a la lista</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

***********************************
Archivo: AdminDelete.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\Usuario\AdminDelete.cshtml
***********************************
@model LogicaDeNegocio.Entidades.Administrador

@{
    ViewData["Title"] = "Borrar administrador";
}

<h1>Borrar administrador</h1>

<h3>Seguro que lo quieres borrar?</h3>
<div>

    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ModificaUsuario)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ModificaUsuario)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Password)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Password)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Nombre)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Nombre)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Apellido)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Apellido)
        </dd>
    </dl>
    
    <form asp-action="AdminDelete">
        <input type="submit" value="Borrar" class="btn btn-danger" /> |
        <a asp-action="AdminIndex">Volver a la lista</a>
    </form>
</div>

***********************************
Archivo: AdminEdit.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\Usuario\AdminEdit.cshtml
***********************************
@model LogicaDeNegocio.Entidades.Administrador

@{
    ViewData["Title"] = "Editar administrador";
}
<h3>Editar Administrador</h3>
<h4>Email: @Model.Email</h4>


@if (@ViewBag.Mensaje != null)
{
    <div class="alert alert-danger" role="alert">
        <p>@ViewBag.Mensaje</p>
    </div>
}
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AdminEdit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" class="form-control" disabled/>
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group" hidden>
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="ModificaUsuario" /> @Html.DisplayNameFor(model => model.ModificaUsuario)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Nombre" class="control-label"></label>
                <input asp-for="Nombre" class="form-control" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Apellido" class="control-label"></label>
                <input asp-for="Apellido" class="form-control" />
                <span asp-validation-for="Apellido" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Guardar cambios" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="AdminIndex">Volver a la lista</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

***********************************
Archivo: AdminIndex.cshtml
Carpeta: C:\Users\pc\Desktop\Libreria\WebApp\Views\Usuario\AdminIndex.cshtml
***********************************
@model IEnumerable<LogicaDeNegocio.Entidades.Administrador>
@{
    string super = Context.Session.GetString("super");
}
@{
    ViewData["Title"] = "Gestion de Administradores";
}
<header>

</header>
<h1>Gestion de Administradores</h1>
@if (@ViewBag.Mensaje != null)
{
    <div class="alert alert-success" role="alert">
        <p>@ViewBag.Mensaje</p>
    </div>
}


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModificaUsuario)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Password)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nombre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Apellido)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModificaUsuario)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Password)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Apellido)
            </td>
            <td>
                    @if (super == "True")
                    {
                @Html.ActionLink("Editar", "AdminEdit", new {  id=item.Id }) 
                    }
                @Html.ActionLink("Borrar", "AdminDelete", new {  id=item.Id  })
            </td>
        </tr>
}
    </tbody>
</table>

<p>
    <a asp-action="AdminCreate">Crear nuevo Administrador</a>
</p>
